"""
Django settings for backend project.
Generated by 'django-admin startproject' using Django 5.2
"""

from pathlib import Path
import os
import dj_database_url

# -----------------------------------------------------------------------------
# Paths
# -----------------------------------------------------------------------------
BASE_DIR = Path(__file__).resolve().parent.parent

# -----------------------------------------------------------------------------
# Core
# -----------------------------------------------------------------------------
SECRET_KEY = os.environ.get("DJANGO_SECRET_KEY", "dev-secret")
DEBUG = os.environ.get("DJANGO_DEBUG", "false").lower() == "true"

# FE (Netlify) & BE (Railway) hostnames – KHÔNG có protocol ở ALLOWED_HOSTS
NETLIFY_HOST = os.environ.get("NETLIFY_HOST", "studyappmaze.netlify.app")
# CUSTOM_DOMAIN = os.environ.get("CUSTOM_DOMAIN", "")  # nếu bạn trỏ domain riêng
ALLOWED_HOSTS = [
    "backend-studyapp-production.up.railway.app/admin",
    ".railway.app",   # cho phép tất cả subdomain của railway
    "localhost",
    "127.0.0.1",
]
CUSTOM_DOMAIN = os.environ.get("CUSTOM_DOMAIN", "")
if CUSTOM_DOMAIN:
    ALLOWED_HOSTS.append(CUSTOM_DOMAIN)


# -----------------------------------------------------------------------------
# Installed apps & middleware
# -----------------------------------------------------------------------------
INSTALLED_APPS = [
    "corsheaders",
    "rest_framework",
    "api",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
]

MIDDLEWARE = [
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",  # phục vụ static trên Railway
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# Django project entry points
ROOT_URLCONF = "backend.urls"
WSGI_APPLICATION = "backend.wsgi.application"
# Nếu dùng ASGI, giữ thêm:
ASGI_APPLICATION = "backend.asgi.application"

# -----------------------------------------------------------------------------
# Templates
# -----------------------------------------------------------------------------
TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],  # có thể để [] nếu không có template riêng
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# -----------------------------------------------------------------------------
# Database (Railway: tự bơm DATABASE_URL; Local: fallback SQLite)
# -----------------------------------------------------------------------------
DATABASES = {
    "default": dj_database_url.config(
        default=f"sqlite:///{BASE_DIR / 'db.sqlite3'}",
        conn_max_age=600,
        ssl_require=False,
    )
}

# -----------------------------------------------------------------------------
# Static files (Whitenoise)
# -----------------------------------------------------------------------------
STATIC_URL = "/static/"
STATIC_ROOT = BASE_DIR / "staticfiles"
STATICFILES_STORAGE = "whitenoise.storage.CompressedManifestStaticFilesStorage"

# -----------------------------------------------------------------------------
# Internationalization
# -----------------------------------------------------------------------------
LANGUAGE_CODE = "en-us"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# -----------------------------------------------------------------------------
# CORS / CSRF cho Netlify + Local + Railway
# -----------------------------------------------------------------------------
# Dùng origin có protocol ở CORS_ALLOWED_ORIGINS/CSRF_TRUSTED_ORIGINS
NETLIFY_URL = f"https://{NETLIFY_HOST}"

CORS_ALLOWED_ORIGINS = [
    NETLIFY_URL,             # FE Netlify
    "http://localhost:3000", # local
    "http://localhost:3001",
]
CORS_ALLOW_CREDENTIALS = True

CSRF_TRUSTED_ORIGINS = [
    NETLIFY_URL,
    "https://*.railway.app",  # Django 5 hỗ trợ wildcard
    "http://localhost:3000",
    "http://localhost:3001",
]

# Cookie khi chạy HTTPS trên Railway
SESSION_COOKIE_SAMESITE = "Lax"
SESSION_COOKIE_SECURE = True
CSRF_COOKIE_SECURE = True

# Tin cậy header do proxy (Railway) gắn thêm để xác định https
SECURE_PROXY_SSL_HEADER = ("HTTP_X_FORWARDED_PROTO", "https")

# -----------------------------------------------------------------------------
# REST framework (tùy chọn)
# -----------------------------------------------------------------------------
REST_FRAMEWORK = {
    "DEFAULT_PERMISSION_CLASSES": [
        "rest_framework.permissions.AllowAny",
    ],
    # Nếu sau này dùng JWT:
    # "DEFAULT_AUTHENTICATION_CLASSES": [
    #     "rest_framework_simplejwt.authentication.JWTAuthentication",
    # ],
}

#change settings
